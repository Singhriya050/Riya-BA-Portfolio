{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1_rSgB5yh9B04NqYNsPCqAsoVbPrGWgFG",
      "authorship_tag": "ABX9TyOSI3DYjJXQNYSmm6c8Eglk",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Singhriya050/Riya-BA-Portfolio/blob/main/Applied%20Statistics%20%26%20Machine%20Learning/Week%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Student Name: Riya Singh\n",
        "Student ID: 20006386\n"
      ],
      "metadata": {
        "id": "Ccv7woXq2Cu9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Import the the file and Load dataset in pandas"
      ],
      "metadata": {
        "id": "187K7HcQ2qTN"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "Vmh8HHMKygOh"
      },
      "outputs": [],
      "source": [
        "from pandas import read_csv,get_dummies,DataFrame,Series\n",
        "data=read_csv(\"/content/drive/MyDrive/DBS/Breast_Cancer.csv\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Explore Dataset to gain Cancer information"
      ],
      "metadata": {
        "id": "uQZtOaBu2o9t"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(data.head())\n",
        "data.tail()\n",
        "data.info()\n",
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "m6pqfZNZy2rz",
        "outputId": "b3244778-6f01-484a-8b10-beb8fa0f7811"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Age   Race Marital Status T Stage  N Stage 6th Stage  \\\n",
            "0   68  White        Married       T1      N1       IIA   \n",
            "1   50  White        Married       T2      N2      IIIA   \n",
            "2   58  White       Divorced       T3      N3      IIIC   \n",
            "3   58  White        Married       T1      N1       IIA   \n",
            "4   47  White        Married       T2      N1       IIB   \n",
            "\n",
            "               differentiate Grade   A Stage  Tumor Size Estrogen Status  \\\n",
            "0      Poorly differentiated     3  Regional           4        Positive   \n",
            "1  Moderately differentiated     2  Regional          35        Positive   \n",
            "2  Moderately differentiated     2  Regional          63        Positive   \n",
            "3      Poorly differentiated     3  Regional          18        Positive   \n",
            "4      Poorly differentiated     3  Regional          41        Positive   \n",
            "\n",
            "  Progesterone Status  Regional Node Examined  Reginol Node Positive  \\\n",
            "0            Positive                      24                      1   \n",
            "1            Positive                      14                      5   \n",
            "2            Positive                      14                      7   \n",
            "3            Positive                       2                      1   \n",
            "4            Positive                       3                      1   \n",
            "\n",
            "   Survival Months Status  \n",
            "0               60  Alive  \n",
            "1               62  Alive  \n",
            "2               75  Alive  \n",
            "3               84  Alive  \n",
            "4               50  Alive  \n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4024 entries, 0 to 4023\n",
            "Data columns (total 16 columns):\n",
            " #   Column                  Non-Null Count  Dtype \n",
            "---  ------                  --------------  ----- \n",
            " 0   Age                     4024 non-null   int64 \n",
            " 1   Race                    4024 non-null   object\n",
            " 2   Marital Status          4024 non-null   object\n",
            " 3   T Stage                 4024 non-null   object\n",
            " 4   N Stage                 4024 non-null   object\n",
            " 5   6th Stage               4024 non-null   object\n",
            " 6   differentiate           4024 non-null   object\n",
            " 7   Grade                   4024 non-null   object\n",
            " 8   A Stage                 4024 non-null   object\n",
            " 9   Tumor Size              4024 non-null   int64 \n",
            " 10  Estrogen Status         4024 non-null   object\n",
            " 11  Progesterone Status     4024 non-null   object\n",
            " 12  Regional Node Examined  4024 non-null   int64 \n",
            " 13  Reginol Node Positive   4024 non-null   int64 \n",
            " 14  Survival Months         4024 non-null   int64 \n",
            " 15  Status                  4024 non-null   object\n",
            "dtypes: int64(5), object(11)\n",
            "memory usage: 503.1+ KB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Age   Tumor Size  Regional Node Examined  \\\n",
              "count  4024.000000  4024.000000             4024.000000   \n",
              "mean     53.972167    30.473658               14.357107   \n",
              "std       8.963134    21.119696                8.099675   \n",
              "min      30.000000     1.000000                1.000000   \n",
              "25%      47.000000    16.000000                9.000000   \n",
              "50%      54.000000    25.000000               14.000000   \n",
              "75%      61.000000    38.000000               19.000000   \n",
              "max      69.000000   140.000000               61.000000   \n",
              "\n",
              "       Reginol Node Positive  Survival Months  \n",
              "count            4024.000000      4024.000000  \n",
              "mean                4.158052        71.297962  \n",
              "std                 5.109331        22.921430  \n",
              "min                 1.000000         1.000000  \n",
              "25%                 1.000000        56.000000  \n",
              "50%                 2.000000        73.000000  \n",
              "75%                 5.000000        90.000000  \n",
              "max                46.000000       107.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-abaa3e0d-3c33-4bcb-b3b2-877065617a24\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Tumor Size</th>\n",
              "      <th>Regional Node Examined</th>\n",
              "      <th>Reginol Node Positive</th>\n",
              "      <th>Survival Months</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>4024.000000</td>\n",
              "      <td>4024.000000</td>\n",
              "      <td>4024.000000</td>\n",
              "      <td>4024.000000</td>\n",
              "      <td>4024.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>53.972167</td>\n",
              "      <td>30.473658</td>\n",
              "      <td>14.357107</td>\n",
              "      <td>4.158052</td>\n",
              "      <td>71.297962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>8.963134</td>\n",
              "      <td>21.119696</td>\n",
              "      <td>8.099675</td>\n",
              "      <td>5.109331</td>\n",
              "      <td>22.921430</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>30.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>47.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>56.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>54.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>73.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>61.000000</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>90.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>69.000000</td>\n",
              "      <td>140.000000</td>\n",
              "      <td>61.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>107.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abaa3e0d-3c33-4bcb-b3b2-877065617a24')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-abaa3e0d-3c33-4bcb-b3b2-877065617a24 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-abaa3e0d-3c33-4bcb-b3b2-877065617a24');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Split Date set"
      ],
      "metadata": {
        "id": "DtgfmeBf28T0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x=data['Race']\n",
        "data['Race'].unique()\n",
        "data['Marital Status'].unique()\n",
        "data['differentiate'].unique()\n",
        "data['6th Stage'].unique()\n",
        "data['A Stage'].unique()\n",
        "data['T Stage '].unique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8PiEoETm1xwM",
        "outputId": "7a45214f-9f87-4072-e802-76a51c8c4818"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['T1', 'T2', 'T3', 'T4'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Converting Categorical features into Numerical Binary values"
      ],
      "metadata": {
        "id": "ZRgONRqj3Aen"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['Race']=data['Race'].map({'White':0,'Black':1,'Others':2})\n",
        "data\n",
        "data['Status'].unique()\n",
        "data['Status']=data['Status'].map({'Alive':1,'Dead':0})\n",
        "data\n",
        "data['6th Stage']=data['6th Stage'].map({'IIA':0,'IIIA':1,'IIIC':2,'IIB':3,'IIIB':4})\n",
        "data\n",
        "data['T Stage '].unique()\n",
        "data['T Stage ']=data['T Stage '].map({'T1':0,'T2':1,'T3':2,'T4':3})\n",
        "data\n",
        "print(data.info())\n",
        "data.head(5)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "zfvDQ0eo11SA",
        "outputId": "b38baa7c-7186-40e4-eb63-ceba1f155600"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4024 entries, 0 to 4023\n",
            "Data columns (total 16 columns):\n",
            " #   Column                  Non-Null Count  Dtype  \n",
            "---  ------                  --------------  -----  \n",
            " 0   Age                     4024 non-null   int64  \n",
            " 1   Race                    3704 non-null   float64\n",
            " 2   Marital Status          4024 non-null   object \n",
            " 3   T Stage                 4024 non-null   int64  \n",
            " 4   N Stage                 4024 non-null   object \n",
            " 5   6th Stage               4024 non-null   int64  \n",
            " 6   differentiate           4024 non-null   object \n",
            " 7   Grade                   4024 non-null   object \n",
            " 8   A Stage                 4024 non-null   object \n",
            " 9   Tumor Size              4024 non-null   int64  \n",
            " 10  Estrogen Status         4024 non-null   object \n",
            " 11  Progesterone Status     4024 non-null   object \n",
            " 12  Regional Node Examined  4024 non-null   int64  \n",
            " 13  Reginol Node Positive   4024 non-null   int64  \n",
            " 14  Survival Months         4024 non-null   int64  \n",
            " 15  Status                  4024 non-null   int64  \n",
            "dtypes: float64(1), int64(8), object(7)\n",
            "memory usage: 503.1+ KB\n",
            "None\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Age  Race Marital Status  T Stage  N Stage  6th Stage  \\\n",
              "0   68   0.0        Married         0      N1          0   \n",
              "1   50   0.0        Married         1      N2          1   \n",
              "2   58   0.0       Divorced         2      N3          2   \n",
              "3   58   0.0        Married         0      N1          0   \n",
              "4   47   0.0        Married         1      N1          3   \n",
              "\n",
              "               differentiate Grade   A Stage  Tumor Size Estrogen Status  \\\n",
              "0      Poorly differentiated     3  Regional           4        Positive   \n",
              "1  Moderately differentiated     2  Regional          35        Positive   \n",
              "2  Moderately differentiated     2  Regional          63        Positive   \n",
              "3      Poorly differentiated     3  Regional          18        Positive   \n",
              "4      Poorly differentiated     3  Regional          41        Positive   \n",
              "\n",
              "  Progesterone Status  Regional Node Examined  Reginol Node Positive  \\\n",
              "0            Positive                      24                      1   \n",
              "1            Positive                      14                      5   \n",
              "2            Positive                      14                      7   \n",
              "3            Positive                       2                      1   \n",
              "4            Positive                       3                      1   \n",
              "\n",
              "   Survival Months  Status  \n",
              "0               60       1  \n",
              "1               62       1  \n",
              "2               75       1  \n",
              "3               84       1  \n",
              "4               50       1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9503ae08-9506-422d-80cd-0e4c2bc57e49\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "      <th>Race</th>\n",
              "      <th>Marital Status</th>\n",
              "      <th>T Stage</th>\n",
              "      <th>N Stage</th>\n",
              "      <th>6th Stage</th>\n",
              "      <th>differentiate</th>\n",
              "      <th>Grade</th>\n",
              "      <th>A Stage</th>\n",
              "      <th>Tumor Size</th>\n",
              "      <th>Estrogen Status</th>\n",
              "      <th>Progesterone Status</th>\n",
              "      <th>Regional Node Examined</th>\n",
              "      <th>Reginol Node Positive</th>\n",
              "      <th>Survival Months</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>68</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Married</td>\n",
              "      <td>0</td>\n",
              "      <td>N1</td>\n",
              "      <td>0</td>\n",
              "      <td>Poorly differentiated</td>\n",
              "      <td>3</td>\n",
              "      <td>Regional</td>\n",
              "      <td>4</td>\n",
              "      <td>Positive</td>\n",
              "      <td>Positive</td>\n",
              "      <td>24</td>\n",
              "      <td>1</td>\n",
              "      <td>60</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>50</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Married</td>\n",
              "      <td>1</td>\n",
              "      <td>N2</td>\n",
              "      <td>1</td>\n",
              "      <td>Moderately differentiated</td>\n",
              "      <td>2</td>\n",
              "      <td>Regional</td>\n",
              "      <td>35</td>\n",
              "      <td>Positive</td>\n",
              "      <td>Positive</td>\n",
              "      <td>14</td>\n",
              "      <td>5</td>\n",
              "      <td>62</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>58</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Divorced</td>\n",
              "      <td>2</td>\n",
              "      <td>N3</td>\n",
              "      <td>2</td>\n",
              "      <td>Moderately differentiated</td>\n",
              "      <td>2</td>\n",
              "      <td>Regional</td>\n",
              "      <td>63</td>\n",
              "      <td>Positive</td>\n",
              "      <td>Positive</td>\n",
              "      <td>14</td>\n",
              "      <td>7</td>\n",
              "      <td>75</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>58</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Married</td>\n",
              "      <td>0</td>\n",
              "      <td>N1</td>\n",
              "      <td>0</td>\n",
              "      <td>Poorly differentiated</td>\n",
              "      <td>3</td>\n",
              "      <td>Regional</td>\n",
              "      <td>18</td>\n",
              "      <td>Positive</td>\n",
              "      <td>Positive</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>47</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Married</td>\n",
              "      <td>1</td>\n",
              "      <td>N1</td>\n",
              "      <td>3</td>\n",
              "      <td>Poorly differentiated</td>\n",
              "      <td>3</td>\n",
              "      <td>Regional</td>\n",
              "      <td>41</td>\n",
              "      <td>Positive</td>\n",
              "      <td>Positive</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9503ae08-9506-422d-80cd-0e4c2bc57e49')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9503ae08-9506-422d-80cd-0e4c2bc57e49 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9503ae08-9506-422d-80cd-0e4c2bc57e49');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Using One Hot Method"
      ],
      "metadata": {
        "id": "mi70mccv3LAy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "categorical_features=['Marital Status','N Stage','differentiate','A Stage','Estrogen Status','Progesterone Status','Race','Status','Grade','6th Stage']\n",
        "final_data=get_dummies(data,columns=categorical_features,drop_first=True)\n",
        "print(final_data.info())\n",
        "print(final_data.head(5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GlttaOVB120w",
        "outputId": "e88c5e4b-6430-459d-ed41-03e31f065d4e"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 4024 entries, 0 to 4023\n",
            "Data columns (total 27 columns):\n",
            " #   Column                               Non-Null Count  Dtype\n",
            "---  ------                               --------------  -----\n",
            " 0   Age                                  4024 non-null   int64\n",
            " 1   T Stage                              4024 non-null   int64\n",
            " 2   Tumor Size                           4024 non-null   int64\n",
            " 3   Regional Node Examined               4024 non-null   int64\n",
            " 4   Reginol Node Positive                4024 non-null   int64\n",
            " 5   Survival Months                      4024 non-null   int64\n",
            " 6   Marital Status_Married               4024 non-null   uint8\n",
            " 7   Marital Status_Separated             4024 non-null   uint8\n",
            " 8   Marital Status_Single                4024 non-null   uint8\n",
            " 9   Marital Status_Widowed               4024 non-null   uint8\n",
            " 10  N Stage_N2                           4024 non-null   uint8\n",
            " 11  N Stage_N3                           4024 non-null   uint8\n",
            " 12  differentiate_Poorly differentiated  4024 non-null   uint8\n",
            " 13  differentiate_Undifferentiated       4024 non-null   uint8\n",
            " 14  differentiate_Well differentiated    4024 non-null   uint8\n",
            " 15  A Stage_Regional                     4024 non-null   uint8\n",
            " 16  Estrogen Status_Positive             4024 non-null   uint8\n",
            " 17  Progesterone Status_Positive         4024 non-null   uint8\n",
            " 18  Race_1.0                             4024 non-null   uint8\n",
            " 19  Status_1                             4024 non-null   uint8\n",
            " 20  Grade_1                              4024 non-null   uint8\n",
            " 21  Grade_2                              4024 non-null   uint8\n",
            " 22  Grade_3                              4024 non-null   uint8\n",
            " 23  6th Stage_1                          4024 non-null   uint8\n",
            " 24  6th Stage_2                          4024 non-null   uint8\n",
            " 25  6th Stage_3                          4024 non-null   uint8\n",
            " 26  6th Stage_4                          4024 non-null   uint8\n",
            "dtypes: int64(6), uint8(21)\n",
            "memory usage: 271.3 KB\n",
            "None\n",
            "   Age  T Stage   Tumor Size  Regional Node Examined  Reginol Node Positive  \\\n",
            "0   68         0           4                      24                      1   \n",
            "1   50         1          35                      14                      5   \n",
            "2   58         2          63                      14                      7   \n",
            "3   58         0          18                       2                      1   \n",
            "4   47         1          41                       3                      1   \n",
            "\n",
            "   Survival Months  Marital Status_Married  Marital Status_Separated  \\\n",
            "0               60                       1                         0   \n",
            "1               62                       1                         0   \n",
            "2               75                       0                         0   \n",
            "3               84                       1                         0   \n",
            "4               50                       1                         0   \n",
            "\n",
            "   Marital Status_Single   Marital Status_Widowed  ...  \\\n",
            "0                       0                       0  ...   \n",
            "1                       0                       0  ...   \n",
            "2                       0                       0  ...   \n",
            "3                       0                       0  ...   \n",
            "4                       0                       0  ...   \n",
            "\n",
            "   Progesterone Status_Positive  Race_1.0  Status_1  Grade_1  Grade_2  \\\n",
            "0                             1         0         1        0        0   \n",
            "1                             1         0         1        0        1   \n",
            "2                             1         0         1        0        1   \n",
            "3                             1         0         1        0        0   \n",
            "4                             1         0         1        0        0   \n",
            "\n",
            "   Grade_3  6th Stage_1  6th Stage_2  6th Stage_3  6th Stage_4  \n",
            "0        1            0            0            0            0  \n",
            "1        0            1            0            0            0  \n",
            "2        0            0            1            0            0  \n",
            "3        1            0            0            0            0  \n",
            "4        1            0            0            1            0  \n",
            "\n",
            "[5 rows x 27 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = final_data.drop('Survival Months',axis=1)\n",
        "Y= final_data['Survival Months']\n",
        "print(type(X))\n",
        "print(type(Y))\n",
        "print(X.shape)\n",
        "print(Y.shape)\n",
        "Y.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NlGhq-aF16Rz",
        "outputId": "f09f3fd9-a622-4f5d-fd31-a025436759ca"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "<class 'pandas.core.series.Series'>\n",
            "(4024, 26)\n",
            "(4024,)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "69     81\n",
              "63     73\n",
              "56     73\n",
              "102    73\n",
              "98     72\n",
              "       ..\n",
              "7       5\n",
              "3       4\n",
              "11      4\n",
              "2       3\n",
              "1       1\n",
              "Name: Survival Months, Length: 107, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Data Spliting"
      ],
      "metadata": {
        "id": "MyDHVBnf3T7y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "X_scaled=StandardScaler().fit_transform(X)\n",
        "print(X_scaled)\n",
        "print(DataFrame(X_scaled).head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kcxIqMky17UO",
        "outputId": "3e2709f1-01b5-4f50-d09d-b2fc0b23a299"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 1.56525337 -1.02528685 -1.25366142 ... -0.36453105 -0.62487041\n",
            "  -0.13012309]\n",
            " [-0.44322226  0.28115846  0.21434515 ... -0.36453105 -0.62487041\n",
            "  -0.13012309]\n",
            " [ 0.44943358  1.58760376  1.54028657 ...  2.74325058 -0.62487041\n",
            "  -0.13012309]\n",
            " ...\n",
            " [ 1.56525337  0.28115846 -0.40127051 ... -0.36453105  1.60033182\n",
            "  -0.13012309]\n",
            " [ 0.44943358  0.28115846  0.64054061 ... -0.36453105  1.60033182\n",
            "  -0.13012309]\n",
            " [-0.88955017  0.28115846 -0.0224301  ... -0.36453105  1.60033182\n",
            "  -0.13012309]]\n",
            "         0         1         2         3         4         5         6   \\\n",
            "0  1.565253 -1.025287 -1.253661  1.190676 -0.618172  0.722850 -0.106346   \n",
            "1 -0.443222  0.281158  0.214345 -0.044095  0.164807  0.722850 -0.106346   \n",
            "2  0.449434  1.587604  1.540287 -0.044095  0.556296 -1.383413 -0.106346   \n",
            "3  0.449434 -1.025287 -0.590691 -1.525820 -0.618172  0.722850 -0.106346   \n",
            "4 -0.777968  0.281158  0.498475 -1.402343 -0.618172  0.722850 -0.106346   \n",
            "\n",
            "         7         8         9   ...        16        17        18        19  \\\n",
            "0 -0.424741 -0.249041 -0.505895  ...  0.458107 -0.279201  0.425148 -0.394955   \n",
            "1 -0.424741 -0.249041  1.976693  ...  0.458107 -0.279201  0.425148 -0.394955   \n",
            "2 -0.424741 -0.249041 -0.505895  ...  0.458107 -0.279201  0.425148 -0.394955   \n",
            "3 -0.424741 -0.249041 -0.505895  ...  0.458107 -0.279201  0.425148 -0.394955   \n",
            "4 -0.424741 -0.249041 -0.505895  ...  0.458107 -0.279201  0.425148 -0.394955   \n",
            "\n",
            "         20        21        22        23        24        25  \n",
            "0 -1.185437  1.619247 -0.594188 -0.364531 -0.624870 -0.130123  \n",
            "1  0.843571 -0.617571  1.682968 -0.364531 -0.624870 -0.130123  \n",
            "2  0.843571 -0.617571 -0.594188  2.743251 -0.624870 -0.130123  \n",
            "3 -1.185437  1.619247 -0.594188 -0.364531 -0.624870 -0.130123  \n",
            "4 -1.185437  1.619247 -0.594188 -0.364531  1.600332 -0.130123  \n",
            "\n",
            "[5 rows x 26 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, Y_train, Y_test=train_test_split(X_scaled,Y,test_size=0.2, random_state=100)\n",
        "print(X_train.shape)\n",
        "print(X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r2zWD_ll1-mB",
        "outputId": "4df850e3-fabd-4522-e73b-4022e98f858d"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(3219, 26)\n",
            "(805, 26)\n"
          ]
        }
      ]
    }
  ]
}